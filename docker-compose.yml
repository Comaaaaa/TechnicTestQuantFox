services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: expense_user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - expense-tracker-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U expense_user -d expense_tracker']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    container_name: expense-tracker-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://expense_user:password@postgres:5432/expense_tracker
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=8080
      - HOST=0.0.0.0
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - expense-tracker-network
    volumes:
      - ./backend/src:/app/src
      - /app/node_modules

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: expense-tracker-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - expense-tracker-network
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
    driver: local

networks:
  expense-tracker-network:
    driver: bridge
    name: expense-tracker-network
